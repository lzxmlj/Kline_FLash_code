; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\spi1.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\spi1.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\STM_Lib\inc -I.\USER -I.\CMSIS -I.\BoardHardware -I.\FATFS\src -I.\FATFS\exfuns -I.\MALLOC -I.\RTE\_407 -Ie:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ie:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\spi1.crf BoardHardware\SPI1.c]
                          THUMB

                          AREA ||i.CSPin_Init||, CODE, READONLY, ALIGN=1

                  CSPin_Init PROC
;;;69     
;;;70     void CSPin_Init(void)
000000  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	SPI1_CS1Pin_Init();
000002  f7fffffe          BL       SPI1_CS1Pin_Init
;;;73     	SPI1_CS2Pin_Init();
000006  f7fffffe          BL       SPI1_CS2Pin_Init
;;;74     	SPI1_CS3Pin_Init();
00000a  f7fffffe          BL       SPI1_CS3Pin_Init
;;;75     }
00000e  bd10              POP      {r4,pc}
;;;76     
                          ENDP


                          AREA ||i.SPI1_CS1Pin_Init||, CODE, READONLY, ALIGN=2

                  SPI1_CS1Pin_Init PROC
;;;76     
;;;77     __weak void SPI1_CS1Pin_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;78     {
;;;79     	GPIO_InitTypeDef GPIO_InitStructure;
;;;80     
;;;81     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB , ENABLE);
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;82     	
;;;83     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;//SD_CS:PB5
00000a  2020              MOVS     r0,#0x20
00000c  9000              STR      r0,[sp,#0]
;;;84     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;85     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000014  2000              MOVS     r0,#0
000016  f88d0006          STRB     r0,[sp,#6]
;;;86     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001a  2002              MOVS     r0,#2
00001c  f88d0005          STRB     r0,[sp,#5]
;;;87     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000020  2001              MOVS     r0,#1
000022  f88d0007          STRB     r0,[sp,#7]
;;;88     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  4803              LDR      r0,|L2.56|
00002a  f7fffffe          BL       GPIO_Init
;;;89     	GPIO_SetBits(GPIOB, GPIO_Pin_5);//不选中
00002e  2120              MOVS     r1,#0x20
000030  4801              LDR      r0,|L2.56|
000032  f7fffffe          BL       GPIO_SetBits
;;;90     }
000036  bd1c              POP      {r2-r4,pc}
;;;91     
                          ENDP

                  |L2.56|
                          DCD      0x40020400

                          AREA ||i.SPI1_CS2Pin_Init||, CODE, READONLY, ALIGN=2

                  SPI1_CS2Pin_Init PROC
;;;91     
;;;92     __weak void SPI1_CS2Pin_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;93     {
;;;94     	GPIO_InitTypeDef GPIO_InitStructure;
;;;95     
;;;96     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB , ENABLE);
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;97     	
;;;98     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;//NET_CS:PB6
00000a  2040              MOVS     r0,#0x40
00000c  9000              STR      r0,[sp,#0]
;;;99     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;100    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000014  2000              MOVS     r0,#0
000016  f88d0006          STRB     r0,[sp,#6]
;;;101    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001a  2002              MOVS     r0,#2
00001c  f88d0005          STRB     r0,[sp,#5]
;;;102    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000020  2001              MOVS     r0,#1
000022  f88d0007          STRB     r0,[sp,#7]
;;;103    	GPIO_Init(GPIOB, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  4803              LDR      r0,|L3.56|
00002a  f7fffffe          BL       GPIO_Init
;;;104    	GPIO_SetBits(GPIOB, GPIO_Pin_5);//不选中
00002e  2120              MOVS     r1,#0x20
000030  4801              LDR      r0,|L3.56|
000032  f7fffffe          BL       GPIO_SetBits
;;;105    }
000036  bd1c              POP      {r2-r4,pc}
;;;106    
                          ENDP

                  |L3.56|
                          DCD      0x40020400

                          AREA ||i.SPI1_CS3Pin_Init||, CODE, READONLY, ALIGN=1

                  SPI1_CS3Pin_Init PROC
;;;106    
;;;107    __weak void SPI1_CS3Pin_Init(void)
000000  4770              BX       lr
;;;108    {
;;;109    }
                          ENDP


                          AREA ||i.SPI1_Init||, CODE, READONLY, ALIGN=1

                  SPI1_Init PROC
;;;5      */
;;;6      void SPI1_Init(void)
000000  4770              BX       lr
;;;7      {
;;;8      	GPIO_InitTypeDef GPIO_InitStructure;
;;;9      	SPI_InitTypeDef  SPI_InitStructure;
;;;10     	static int SPI1_InitFlag=0;
;;;11     	#if 0
;;;12     	if(SPI1_InitFlag == 0)
;;;13     	{
;;;14     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
;;;15     		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA ,ENABLE);
;;;16     		
;;;17     		GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_SPI1);
;;;18     		GPIO_PinAFConfig(GPIOA, GPIO_PinSource6, GPIO_AF_SPI1);
;;;19     		GPIO_PinAFConfig(GPIOA, GPIO_PinSource7, GPIO_AF_SPI1);
;;;20     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
;;;21     		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;22     		GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
;;;23     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;24     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
;;;25     		GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;26     		
;;;27     		SPI_I2S_DeInit(SPI1);
;;;28     		SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;//全双工
;;;29     		SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;//8位数据模式
;;;30     		SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;//空闲模式下SCK为1
;;;31     		SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;//数据采样从第2个时间边沿开始
;;;32     		SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;//NSS软件管理
;;;33     		SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_256;//波特率
;;;34     		SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;//大端模式
;;;35     		SPI_InitStructure.SPI_CRCPolynomial = 7;//CRC多项式
;;;36     		SPI_InitStructure.SPI_Mode = SPI_Mode_Master;//主机模式
;;;37     		SPI_Init(SPI1, &SPI_InitStructure);
;;;38     		SPI_Cmd(SPI1, ENABLE);
;;;39     		SPI1_InitFlag=1;
;;;40     	}
;;;41        #endif
;;;42     }
;;;43     
                          ENDP


                          AREA ||i.SPI1_ReadWriteByte||, CODE, READONLY, ALIGN=2

                  SPI1_ReadWriteByte PROC
;;;49     }
;;;50     u8 SPI1_ReadWriteByte(u8 TxData)
000000  b570              PUSH     {r4-r6,lr}
;;;51     {
000002  4605              MOV      r5,r0
;;;52     	u8 retry=0;
000004  2400              MOVS     r4,#0
;;;53     	while (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET) //检查指定的SPI标志位设置与否:发送缓存空标志位
000006  e005              B        |L6.20|
                  |L6.8|
;;;54     	{
;;;55     		retry++;
000008  1c60              ADDS     r0,r4,#1
00000a  b2c4              UXTB     r4,r0
;;;56     		if(retry>200)return 0;
00000c  2cc8              CMP      r4,#0xc8
00000e  dd01              BLE      |L6.20|
000010  2000              MOVS     r0,#0
                  |L6.18|
;;;57     	}
;;;58     	SPI_I2S_SendData(SPI1, TxData); //通过外设SPIx发送一个数据
;;;59     	retry=0;
;;;60     
;;;61     	while (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET) //检查指定的SPI标志位设置与否:接受缓存非空标志位
;;;62     	{
;;;63     		retry++;
;;;64     		if(retry>200)return 0;
;;;65     	}
;;;66     	return SPI_I2S_ReceiveData(SPI1); //返回通过SPIx最近接收的数据
;;;67     }
000012  bd70              POP      {r4-r6,pc}
                  |L6.20|
000014  2102              MOVS     r1,#2                 ;53
000016  480e              LDR      r0,|L6.80|
000018  f7fffffe          BL       SPI_I2S_GetFlagStatus
00001c  2800              CMP      r0,#0                 ;53
00001e  d0f3              BEQ      |L6.8|
000020  4629              MOV      r1,r5                 ;58
000022  480b              LDR      r0,|L6.80|
000024  f7fffffe          BL       SPI_I2S_SendData
000028  2400              MOVS     r4,#0                 ;59
00002a  e005              B        |L6.56|
                  |L6.44|
00002c  1c60              ADDS     r0,r4,#1              ;63
00002e  b2c4              UXTB     r4,r0                 ;63
000030  2cc8              CMP      r4,#0xc8              ;64
000032  dd01              BLE      |L6.56|
000034  2000              MOVS     r0,#0                 ;64
000036  e7ec              B        |L6.18|
                  |L6.56|
000038  2101              MOVS     r1,#1                 ;61
00003a  4805              LDR      r0,|L6.80|
00003c  f7fffffe          BL       SPI_I2S_GetFlagStatus
000040  2800              CMP      r0,#0                 ;61
000042  d0f3              BEQ      |L6.44|
000044  4802              LDR      r0,|L6.80|
000046  f7fffffe          BL       SPI_I2S_ReceiveData
00004a  b2c0              UXTB     r0,r0                 ;66
00004c  e7e1              B        |L6.18|
;;;68     
                          ENDP

00004e  0000              DCW      0x0000
                  |L6.80|
                          DCD      0x40013000

                          AREA ||i.SPI1_SetSpeed||, CODE, READONLY, ALIGN=2

                  SPI1_SetSpeed PROC
;;;43     
;;;44     void SPI1_SetSpeed(u8 SpeedSet)
000000  b510              PUSH     {r4,lr}
;;;45     {
000002  4604              MOV      r4,r0
;;;46     	SPI1->CR1&=0XFFC7;
000004  4807              LDR      r0,|L7.36|
000006  8800              LDRH     r0,[r0,#0]
000008  f64f71c7          MOV      r1,#0xffc7
00000c  4008              ANDS     r0,r0,r1
00000e  4905              LDR      r1,|L7.36|
000010  8008              STRH     r0,[r1,#0]
;;;47     	SPI1->CR1|=SpeedSet;
000012  4608              MOV      r0,r1
000014  8800              LDRH     r0,[r0,#0]
000016  4320              ORRS     r0,r0,r4
000018  8008              STRH     r0,[r1,#0]
;;;48     	SPI_Cmd(SPI1,ENABLE);
00001a  2101              MOVS     r1,#1
00001c  4801              LDR      r0,|L7.36|
00001e  f7fffffe          BL       SPI_Cmd
;;;49     }
000022  bd10              POP      {r4,pc}
;;;50     u8 SPI1_ReadWriteByte(u8 TxData)
                          ENDP

                  |L7.36|
                          DCD      0x40013000

                          AREA ||.data||, DATA, ALIGN=2

                  SPI1_InitFlag
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "BoardHardware\\SPI1.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_SPI1_c_1b04b235____REV16|
#line 388 ".\\CMSIS\\cmsis_armcc.h"
|__asm___6_SPI1_c_1b04b235____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_SPI1_c_1b04b235____REVSH|
#line 402
|__asm___6_SPI1_c_1b04b235____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_SPI1_c_1b04b235____RRX|
#line 587
|__asm___6_SPI1_c_1b04b235____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
