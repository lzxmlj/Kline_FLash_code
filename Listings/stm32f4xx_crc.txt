; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_crc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_crc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\STM_Lib\inc -I.\USER -I.\CMSIS -I.\BoardHardware -I.\FATFS\src -I.\FATFS\exfuns -I.\MALLOC -I.\RTE\_407 -Ie:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ie:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\stm32f4xx_crc.crf STM_Lib\src\stm32f4xx_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;79       */
;;;80     uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000000  b510              PUSH     {r4,lr}
;;;81     {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;82       uint32_t index = 0;
000006  2100              MOVS     r1,#0
;;;83       
;;;84       for(index = 0; index < BufferLength; index++)
000008  bf00              NOP      
00000a  e004              B        |L1.22|
                  |L1.12|
;;;85       {
;;;86         CRC->DR = pBuffer[index];
00000c  f8520021          LDR      r0,[r2,r1,LSL #2]
000010  4c03              LDR      r4,|L1.32|
000012  6020              STR      r0,[r4,#0]
000014  1c49              ADDS     r1,r1,#1              ;84
                  |L1.22|
000016  4299              CMP      r1,r3                 ;84
000018  d3f8              BCC      |L1.12|
;;;87       }
;;;88       return (CRC->DR);
00001a  4801              LDR      r0,|L1.32|
00001c  6800              LDR      r0,[r0,#0]
;;;89     }
00001e  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L1.32|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;66       */
;;;67     uint32_t CRC_CalcCRC(uint32_t Data)
000000  4601              MOV      r1,r0
;;;68     {
;;;69       CRC->DR = Data;
000002  4802              LDR      r0,|L2.12|
000004  6001              STR      r1,[r0,#0]
;;;70       
;;;71       return (CRC->DR);
000006  6800              LDR      r0,[r0,#0]
;;;72     }
000008  4770              BX       lr
;;;73     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;95       */
;;;96     uint32_t CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;97     {
;;;98       return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;99     }
000004  4770              BX       lr
;;;100    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;115      */
;;;116    uint8_t CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;117    {
;;;118      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;119    }
000004  4770              BX       lr
;;;120    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;55       */
;;;56     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;57     {
;;;58       /* Reset CRC generator */
;;;59       CRC->CR = CRC_CR_RESET;
000002  4901              LDR      r1,|L5.8|
000004  6088              STR      r0,[r1,#8]
;;;60     }
000006  4770              BX       lr
;;;61     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;105      */
;;;106    void CRC_SetIDRegister(uint8_t IDValue)
000000  4901              LDR      r1,|L6.8|
;;;107    {
;;;108      CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;109    }
000004  4770              BX       lr
;;;110    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000

;*** Start embedded assembler ***

#line 1 "STM_Lib\\src\\stm32f4xx_crc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f4xx_crc_c_eea4c7d3____REV16|
#line 388 ".\\CMSIS\\cmsis_armcc.h"
|__asm___15_stm32f4xx_crc_c_eea4c7d3____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f4xx_crc_c_eea4c7d3____REVSH|
#line 402
|__asm___15_stm32f4xx_crc_c_eea4c7d3____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f4xx_crc_c_eea4c7d3____RRX|
#line 587
|__asm___15_stm32f4xx_crc_c_eea4c7d3____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
