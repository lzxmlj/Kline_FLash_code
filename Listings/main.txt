; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\STM_Lib\inc -I.\USER -I.\CMSIS -I.\BoardHardware -I.\FATFS\src -I.\FATFS\exfuns -I.\MALLOC -I.\RTE\_407 -Ie:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ie:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\main.crf USER\main.c]
                          THUMB

                          AREA ||i.Clr_canmessage||, CODE, READONLY, ALIGN=2

                  Clr_canmessage PROC
;;;496    }
;;;497    void Clr_canmessage(void)
000000  2000              MOVS     r0,#0
;;;498    {
;;;499    	uint8_t i;
;;;500    	for( i = 0; i < 8; i++)
000002  e004              B        |L1.14|
                  |L1.4|
;;;501    		CAN_need_update_data[i] = 0;
000004  2100              MOVS     r1,#0
000006  4a03              LDR      r2,|L1.20|
000008  5411              STRB     r1,[r2,r0]
00000a  1c41              ADDS     r1,r0,#1              ;500
00000c  b2c8              UXTB     r0,r1                 ;500
                  |L1.14|
00000e  2808              CMP      r0,#8                 ;500
000010  dbf8              BLT      |L1.4|
;;;502    }
000012  4770              BX       lr
;;;503    
                          ENDP

                  |L1.20|
                          DCD      CAN_need_update_data

                          AREA ||i.RTE_INITIAL||, CODE, READONLY, ALIGN=1

                  RTE_INITIAL PROC
;;;448    	  }
;;;449    void RTE_INITIAL(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;450    {
;;;451    
;;;452    	GPIO_InitTypeDef GPIO_InitStructure; 
;;;453    	NVIC_InitTypeDef NVIC_InitStructure;
;;;454    	TIM_TimeBaseInitTypeDef   TIM_TimeBaseStructure;
;;;455    	TIM_ICInitTypeDef TIM_ICInitStructure;
;;;456       
;;;457             RCC_APB1PeriphClockCmd( RCC_APB1Periph_TIM2, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;458       	TIM_DeInit(TIM2);
00000a  f04f4080          MOV      r0,#0x40000000
00000e  f7fffffe          BL       TIM_DeInit
;;;459    	TIM_TimeBaseStructure.TIM_Period = 1000;
000012  f44f707a          MOV      r0,#0x3e8
000016  9001              STR      r0,[sp,#4]
;;;460    	TIM_TimeBaseStructure.TIM_Prescaler = 42;//1439
000018  202a              MOVS     r0,#0x2a
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;461    	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
00001e  2000              MOVS     r0,#0
000020  f8ad0008          STRH     r0,[sp,#8]
;;;462    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
000024  f8ad0002          STRH     r0,[sp,#2]
;;;463    	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
000028  4669              MOV      r1,sp
00002a  f04f4080          MOV      r0,#0x40000000
00002e  f7fffffe          BL       TIM_TimeBaseInit
;;;464    	TIM_ClearFlag(TIM2, TIM_FLAG_Update);
000032  2101              MOVS     r1,#1
000034  0788              LSLS     r0,r1,#30
000036  f7fffffe          BL       TIM_ClearFlag
;;;465    	TIM_ITConfig(TIM2,TIM_IT_CC1,ENABLE);
00003a  2201              MOVS     r2,#1
00003c  2102              MOVS     r1,#2
00003e  0748              LSLS     r0,r1,#29
000040  f7fffffe          BL       TIM_ITConfig
;;;466    	TIM_Cmd(TIM2,ENABLE);
000044  2101              MOVS     r1,#1
000046  0788              LSLS     r0,r1,#30
000048  f7fffffe          BL       TIM_Cmd
;;;467    	 NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
00004c  201c              MOVS     r0,#0x1c
00004e  f88d000c          STRB     r0,[sp,#0xc]
;;;468    	   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
000052  2000              MOVS     r0,#0
000054  f88d000d          STRB     r0,[sp,#0xd]
;;;469    	   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0;
000058  f88d000e          STRB     r0,[sp,#0xe]
;;;470    	  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00005c  2001              MOVS     r0,#1
00005e  f88d000f          STRB     r0,[sp,#0xf]
;;;471       NVIC_Init(&NVIC_InitStructure);
000062  a803              ADD      r0,sp,#0xc
000064  f7fffffe          BL       NVIC_Init
;;;472    }
000068  bd1f              POP      {r0-r4,pc}
;;;473    void TIM3_INITIAL(void)
                          ENDP


                          AREA ||i.TIM3_INITIAL||, CODE, READONLY, ALIGN=2

                  TIM3_INITIAL PROC
;;;472    }
;;;473    void TIM3_INITIAL(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;474    {
;;;475    
;;;476    	GPIO_InitTypeDef GPIO_InitStructure; 
;;;477    	NVIC_InitTypeDef NVIC_InitStructure;
;;;478    	TIM_TimeBaseInitTypeDef   TIM_TimeBaseStructure;
;;;479    	TIM_ICInitTypeDef TIM_ICInitStructure;
;;;480       
;;;481             RCC_APB1PeriphClockCmd( RCC_APB1Periph_TIM3, ENABLE);
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;482       	TIM_DeInit(TIM3);
00000a  4817              LDR      r0,|L3.104|
00000c  f7fffffe          BL       TIM_DeInit
;;;483    	TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
000010  f64f70ff          MOV      r0,#0xffff
000014  9001              STR      r0,[sp,#4]
;;;484    	TIM_TimeBaseStructure.TIM_Prescaler = 1049;//1439
000016  f2404019          MOV      r0,#0x419
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;485    	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
00001e  2000              MOVS     r0,#0
000020  f8ad0008          STRH     r0,[sp,#8]
;;;486    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
000024  f8ad0002          STRH     r0,[sp,#2]
;;;487    	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
000028  4669              MOV      r1,sp
00002a  480f              LDR      r0,|L3.104|
00002c  f7fffffe          BL       TIM_TimeBaseInit
;;;488    	TIM_ClearFlag(TIM3, TIM_FLAG_Update);
000030  2101              MOVS     r1,#1
000032  480d              LDR      r0,|L3.104|
000034  f7fffffe          BL       TIM_ClearFlag
;;;489    	TIM_ITConfig(TIM3,TIM_IT_CC1,ENABLE);
000038  2201              MOVS     r2,#1
00003a  2102              MOVS     r1,#2
00003c  480a              LDR      r0,|L3.104|
00003e  f7fffffe          BL       TIM_ITConfig
;;;490    	TIM_Cmd(TIM3,ENABLE);
000042  2101              MOVS     r1,#1
000044  4808              LDR      r0,|L3.104|
000046  f7fffffe          BL       TIM_Cmd
;;;491    	 NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
00004a  201d              MOVS     r0,#0x1d
00004c  f88d000c          STRB     r0,[sp,#0xc]
;;;492    	   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
000050  2000              MOVS     r0,#0
000052  f88d000d          STRB     r0,[sp,#0xd]
;;;493    	   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0;
000056  f88d000e          STRB     r0,[sp,#0xe]
;;;494    	  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00005a  2001              MOVS     r0,#1
00005c  f88d000f          STRB     r0,[sp,#0xf]
;;;495       NVIC_Init(&NVIC_InitStructure);
000060  a803              ADD      r0,sp,#0xc
000062  f7fffffe          BL       NVIC_Init
;;;496    }
000066  bd1f              POP      {r0-r4,pc}
;;;497    void Clr_canmessage(void)
                          ENDP

                  |L3.104|
                          DCD      0x40000400

                          AREA ||i.Usart_Send||, CODE, READONLY, ALIGN=2

                  Usart_Send PROC
;;;443    	  }
;;;444    	  void Usart_Send(u8 ch)
000000  bf00              NOP      
                  |L4.2|
;;;445    	  {
;;;446    		 while((USART1->SR&0X40)==0);//�ȴ����ͽ���
000002  4904              LDR      r1,|L4.20|
000004  8809              LDRH     r1,[r1,#0]
000006  f0010140          AND      r1,r1,#0x40
00000a  2900              CMP      r1,#0
00000c  d0f9              BEQ      |L4.2|
;;;447    		  USART1->DR= ch;
00000e  4901              LDR      r1,|L4.20|
000010  8088              STRH     r0,[r1,#4]
;;;448    	  }
000012  4770              BX       lr
;;;449    void RTE_INITIAL(void)
                          ENDP

                  |L4.20|
                          DCD      0x40011000

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;90     u8 test_cpnst;
;;;91     int main(void)
000000  b508              PUSH     {r3,lr}
;;;92      {
;;;93     
;;;94     	u32 i,j,k,l,m;
;;;95     	u8 temp_address[3];
;;;96       FSMC_SRAM_Init();
000002  f7fffffe          BL       FSMC_SRAM_Init
;;;97     	Stm32_Clock_Init(336,8,2,7);
000006  2307              MOVS     r3,#7
000008  2202              MOVS     r2,#2
00000a  2108              MOVS     r1,#8
00000c  f44f70a8          MOV      r0,#0x150
000010  f7fffffe          BL       Stm32_Clock_Init
;;;98     	CAN1_Config();
000014  f7fffffe          BL       CAN1_Config
;;;99     	RTE_INITIAL();   
000018  f7fffffe          BL       RTE_INITIAL
;;;100    	uart_init(84,10400);	//´®¿Ú³õÊ¼»¯Îª115200
00001c  f64201a0          MOV      r1,#0x28a0
000020  2054              MOVS     r0,#0x54
000022  f7fffffe          BL       uart_init
;;;101    
;;;102    	TIM3_INITIAL();
000026  f7fffffe          BL       TIM3_INITIAL
;;;103        Roll_CAN_node = 2;
00002a  2002              MOVS     r0,#2
00002c  49fd              LDR      r1,|L5.1060|
00002e  7008              STRB     r0,[r1,#0]
;;;104    
;;;105       text_count = 0;
000030  2000              MOVS     r0,#0
000032  49fd              LDR      r1,|L5.1064|
000034  8008              STRH     r0,[r1,#0]
;;;106       text_count_pre = 0;
000036  49fd              LDR      r1,|L5.1068|
000038  8008              STRH     r0,[r1,#0]
;;;107       backup_type = 0;
00003a  49fd              LDR      r1,|L5.1072|
00003c  7008              STRB     r0,[r1,#0]
;;;108    
;;;109       GPIO_WriteBit(GPIOA,GPIO_Pin_9,Bit_SET);
00003e  2201              MOVS     r2,#1
000040  0251              LSLS     r1,r2,#9
000042  48fc              LDR      r0,|L5.1076|
000044  f7fffffe          BL       GPIO_WriteBit
                  |L5.72|
;;;110       while(1)
000048  e383              B        |L5.1874|
                  |L5.74|
;;;111    	{
;;;112    	  if(loop_enable == 1)
00004a  48fb              LDR      r0,|L5.1080|
00004c  7800              LDRB     r0,[r0,#0]  ; loop_enable
00004e  2801              CMP      r0,#1
000050  d1fa              BNE      |L5.72|
;;;113    	  {
;;;114    
;;;115    	   loop_enable = 0;
000052  2000              MOVS     r0,#0
000054  49f8              LDR      r1,|L5.1080|
000056  7008              STRB     r0,[r1,#0]
;;;116    
;;;117         //CAN1_Send_Msg(0x111,test_message);
;;;118    	   //data_address = 0xC0B000;
;;;119    		 if((CAN_need_update_data[0] == 1) && (CAN_need_update_data[1] == 1)
000058  48f8              LDR      r0,|L5.1084|
00005a  7800              LDRB     r0,[r0,#0]  ; CAN_need_update_data
00005c  2801              CMP      r0,#1
00005e  d13f              BNE      |L5.224|
000060  48f6              LDR      r0,|L5.1084|
000062  7840              LDRB     r0,[r0,#1]  ; CAN_need_update_data
000064  2801              CMP      r0,#1
000066  d13b              BNE      |L5.224|
;;;120    			&& (CAN_need_update_data[2] == 1) && (CAN_need_update_data[3] == 1)
000068  48f4              LDR      r0,|L5.1084|
00006a  7880              LDRB     r0,[r0,#2]  ; CAN_need_update_data
00006c  2801              CMP      r0,#1
00006e  d137              BNE      |L5.224|
000070  48f2              LDR      r0,|L5.1084|
000072  78c0              LDRB     r0,[r0,#3]  ; CAN_need_update_data
000074  2801              CMP      r0,#1
000076  d133              BNE      |L5.224|
;;;121    			&& (CAN_need_update_data[4] == 1) && (CAN_need_update_data[5] == 1)
000078  48f0              LDR      r0,|L5.1084|
00007a  7900              LDRB     r0,[r0,#4]  ; CAN_need_update_data
00007c  2801              CMP      r0,#1
00007e  d12f              BNE      |L5.224|
000080  48ee              LDR      r0,|L5.1084|
000082  7940              LDRB     r0,[r0,#5]  ; CAN_need_update_data
000084  2801              CMP      r0,#1
000086  d12b              BNE      |L5.224|
;;;122    			&& (CAN_need_update_data[6] == 1) && (CAN_need_update_data[7] == 1))
000088  48ec              LDR      r0,|L5.1084|
00008a  7980              LDRB     r0,[r0,#6]  ; CAN_need_update_data
00008c  2801              CMP      r0,#1
00008e  d127              BNE      |L5.224|
000090  48ea              LDR      r0,|L5.1084|
000092  79c0              LDRB     r0,[r0,#7]  ; CAN_need_update_data
000094  2801              CMP      r0,#1
000096  d123              BNE      |L5.224|
;;;123    	   {
;;;124    			start_load_data = 1;
000098  49e9              LDR      r1,|L5.1088|
00009a  7008              STRB     r0,[r1,#0]
;;;125    			test_message[0] = 1;
00009c  49e9              LDR      r1,|L5.1092|
00009e  7008              STRB     r0,[r1,#0]
;;;126    			test_message[1] = 2;
0000a0  2002              MOVS     r0,#2
0000a2  7048              STRB     r0,[r1,#1]
;;;127    			CAN1_Send_Msg(0x111,test_message);
0000a4  f2401011          MOV      r0,#0x111
0000a8  f7fffffe          BL       CAN1_Send_Msg
;;;128    			can_receive_data = 0;
0000ac  2000              MOVS     r0,#0
0000ae  49e6              LDR      r1,|L5.1096|
0000b0  6008              STR      r0,[r1,#0]  ; can_receive_data
;;;129    			check_over = 0;
0000b2  49e6              LDR      r1,|L5.1100|
0000b4  7008              STRB     r0,[r1,#0]
;;;130    			Clr_canmessage();
0000b6  f7fffffe          BL       Clr_canmessage
;;;131    			Flash_CAL = 1;
0000ba  2001              MOVS     r0,#1
0000bc  49e4              LDR      r1,|L5.1104|
0000be  7008              STRB     r0,[r1,#0]
;;;132    			count = 0;
0000c0  2000              MOVS     r0,#0
0000c2  49e4              LDR      r1,|L5.1108|
0000c4  8008              STRH     r0,[r1,#0]
;;;133    			initial_complete = 0;
0000c6  49e4              LDR      r1,|L5.1112|
0000c8  7008              STRB     r0,[r1,#0]
;;;134    			Vbmessage_send = 0;
0000ca  49e4              LDR      r1,|L5.1116|
0000cc  7008              STRB     r0,[r1,#0]
;;;135    			flash_block = 0;
0000ce  49e4              LDR      r1,|L5.1120|
0000d0  8008              STRH     r0,[r1,#0]
;;;136    			data_address = 0xC0B000;
0000d2  48e4              LDR      r0,|L5.1124|
0000d4  49e4              LDR      r1,|L5.1128|
0000d6  6008              STR      r0,[r1,#0]  ; data_address
;;;137    			cal_is_over = 1;
0000d8  2001              MOVS     r0,#1
0000da  49e4              LDR      r1,|L5.1132|
0000dc  7008              STRB     r0,[r1,#0]
0000de  e043              B        |L5.360|
                  |L5.224|
;;;138    		}
;;;139    		else
;;;140    		{
;;;141    			if((CAN_need_update_data[0] == 2) && (CAN_need_update_data[1] == 2)
0000e0  48d6              LDR      r0,|L5.1084|
0000e2  7800              LDRB     r0,[r0,#0]  ; CAN_need_update_data
0000e4  2802              CMP      r0,#2
0000e6  d13f              BNE      |L5.360|
0000e8  48d4              LDR      r0,|L5.1084|
0000ea  7840              LDRB     r0,[r0,#1]  ; CAN_need_update_data
0000ec  2802              CMP      r0,#2
0000ee  d13b              BNE      |L5.360|
;;;142    			&& (CAN_need_update_data[2] == 2) && (CAN_need_update_data[3] == 2)
0000f0  48d2              LDR      r0,|L5.1084|
0000f2  7880              LDRB     r0,[r0,#2]  ; CAN_need_update_data
0000f4  2802              CMP      r0,#2
0000f6  d137              BNE      |L5.360|
0000f8  48d0              LDR      r0,|L5.1084|
0000fa  78c0              LDRB     r0,[r0,#3]  ; CAN_need_update_data
0000fc  2802              CMP      r0,#2
0000fe  d133              BNE      |L5.360|
;;;143    			&& (CAN_need_update_data[4] == 2) && (CAN_need_update_data[5] == 2)
000100  48ce              LDR      r0,|L5.1084|
000102  7900              LDRB     r0,[r0,#4]  ; CAN_need_update_data
000104  2802              CMP      r0,#2
000106  d12f              BNE      |L5.360|
000108  48cc              LDR      r0,|L5.1084|
00010a  7940              LDRB     r0,[r0,#5]  ; CAN_need_update_data
00010c  2802              CMP      r0,#2
00010e  d12b              BNE      |L5.360|
;;;144    			&& (CAN_need_update_data[6] == 2) && (CAN_need_update_data[7] == 2))
000110  48ca              LDR      r0,|L5.1084|
000112  7980              LDRB     r0,[r0,#6]  ; CAN_need_update_data
000114  2802              CMP      r0,#2
000116  d127              BNE      |L5.360|
000118  48c8              LDR      r0,|L5.1084|
00011a  79c0              LDRB     r0,[r0,#7]  ; CAN_need_update_data
00011c  2802              CMP      r0,#2
00011e  d123              BNE      |L5.360|
;;;145    	   {
;;;146    			start_load_data = 1;
000120  2001              MOVS     r0,#1
000122  49c7              LDR      r1,|L5.1088|
000124  7008              STRB     r0,[r1,#0]
;;;147    			test_message[0] = 1;
000126  49c7              LDR      r1,|L5.1092|
000128  7008              STRB     r0,[r1,#0]
;;;148    			test_message[1] = 2;
00012a  2002              MOVS     r0,#2
00012c  7048              STRB     r0,[r1,#1]
;;;149    			CAN1_Send_Msg(0x222,test_message);
00012e  f2402022          MOV      r0,#0x222
000132  f7fffffe          BL       CAN1_Send_Msg
;;;150    			can_receive_data = 0;
000136  2000              MOVS     r0,#0
000138  49c3              LDR      r1,|L5.1096|
00013a  6008              STR      r0,[r1,#0]  ; can_receive_data
;;;151    			check_over = 0;
00013c  49c3              LDR      r1,|L5.1100|
00013e  7008              STRB     r0,[r1,#0]
;;;152    			Clr_canmessage();
000140  f7fffffe          BL       Clr_canmessage
;;;153    			Flash_CAL = 2;
000144  2002              MOVS     r0,#2
000146  49c2              LDR      r1,|L5.1104|
000148  7008              STRB     r0,[r1,#0]
;;;154    			count = 0;
00014a  2000              MOVS     r0,#0
00014c  49c1              LDR      r1,|L5.1108|
00014e  8008              STRH     r0,[r1,#0]
;;;155    			initial_complete = 0;
000150  49c1              LDR      r1,|L5.1112|
000152  7008              STRB     r0,[r1,#0]
;;;156    			Vbmessage_send =0;
000154  49c1              LDR      r1,|L5.1116|
000156  7008              STRB     r0,[r1,#0]
;;;157    			flash_block = 0;
000158  49c1              LDR      r1,|L5.1120|
00015a  8008              STRH     r0,[r1,#0]
;;;158    			data_address = 0xC0B000;
00015c  48c1              LDR      r0,|L5.1124|
00015e  49c2              LDR      r1,|L5.1128|
000160  6008              STR      r0,[r1,#0]  ; data_address
;;;159    			cal_is_over = 1;
000162  2001              MOVS     r0,#1
000164  49c1              LDR      r1,|L5.1132|
000166  7008              STRB     r0,[r1,#0]
                  |L5.360|
;;;160    	   }
;;;161    		}
;;;162    	   if((can_receive_data == 0x800) && (check_over == 0) && (start_load_data == 1))
000168  48b7              LDR      r0,|L5.1096|
00016a  6800              LDR      r0,[r0,#0]  ; can_receive_data
00016c  f5b06f00          CMP      r0,#0x800
000170  d128              BNE      |L5.452|
000172  48b6              LDR      r0,|L5.1100|
000174  7800              LDRB     r0,[r0,#0]  ; check_over
000176  bb28              CBNZ     r0,|L5.452|
000178  48b1              LDR      r0,|L5.1088|
00017a  7800              LDRB     r0,[r0,#0]  ; start_load_data
00017c  2801              CMP      r0,#1
00017e  d121              BNE      |L5.452|
;;;163    		 {
;;;164    		  for(i = 0;i < can_receive_data;i++)
000180  2400              MOVS     r4,#0
000182  e009              B        |L5.408|
                  |L5.388|
;;;165    		  {
;;;166    			if(VcRAM_Utilty[i] != data_list[i])
000184  48ba              LDR      r0,|L5.1136|
000186  5d00              LDRB     r0,[r0,r4]
000188  49ba              LDR      r1,|L5.1140|
00018a  5d09              LDRB     r1,[r1,r4]
00018c  4288              CMP      r0,r1
00018e  d002              BEQ      |L5.406|
;;;167    			  check_fail = 1;
000190  2001              MOVS     r0,#1
000192  49b9              LDR      r1,|L5.1144|
000194  7008              STRB     r0,[r1,#0]
                  |L5.406|
000196  1c64              ADDS     r4,r4,#1              ;164
                  |L5.408|
000198  48ab              LDR      r0,|L5.1096|
00019a  6800              LDR      r0,[r0,#0]            ;164  ; can_receive_data
00019c  4284              CMP      r4,r0                 ;164
00019e  d3f1              BCC      |L5.388|
;;;168    		  }
;;;169    				  test_message[0] = 0x55;
0001a0  2055              MOVS     r0,#0x55
0001a2  49a8              LDR      r1,|L5.1092|
0001a4  7008              STRB     r0,[r1,#0]
;;;170    				  test_message[1] = 0xAA;		  
0001a6  20aa              MOVS     r0,#0xaa
0001a8  7048              STRB     r0,[r1,#1]
;;;171    		  //if(check_fail == 0)
;;;172    							CAN1_Send_Msg(0x112,test_message);
0001aa  f44f7089          MOV      r0,#0x112
0001ae  f7fffffe          BL       CAN1_Send_Msg
;;;173    		  check_over = 1;
0001b2  2001              MOVS     r0,#1
0001b4  49a5              LDR      r1,|L5.1100|
0001b6  7008              STRB     r0,[r1,#0]
;;;174    		  start_load_data = 0;
0001b8  2000              MOVS     r0,#0
0001ba  49a1              LDR      r1,|L5.1088|
0001bc  7008              STRB     r0,[r1,#0]
;;;175    				  can_receive_data = 0;
0001be  49a2              LDR      r1,|L5.1096|
0001c0  6008              STR      r0,[r1,#0]  ; can_receive_data
0001c2  e057              B        |L5.628|
                  |L5.452|
;;;176    		}
;;;177    			  else if((can_receive_data == 0x6000) && (check_over == 1))
0001c4  48a0              LDR      r0,|L5.1096|
0001c6  6800              LDR      r0,[r0,#0]  ; can_receive_data
0001c8  f5b04fc0          CMP      r0,#0x6000
0001cc  d128              BNE      |L5.544|
0001ce  489f              LDR      r0,|L5.1100|
0001d0  7800              LDRB     r0,[r0,#0]  ; check_over
0001d2  2801              CMP      r0,#1
0001d4  d124              BNE      |L5.544|
;;;178    			{
;;;179    				check_fail = 0;
0001d6  2000              MOVS     r0,#0
0001d8  49a7              LDR      r1,|L5.1144|
0001da  7008              STRB     r0,[r1,#0]
;;;180    		  for(i = 0;i < can_receive_data;i++)
0001dc  2400              MOVS     r4,#0
0001de  e009              B        |L5.500|
                  |L5.480|
;;;181    		  {
;;;182    			if(VcRAM_Cal[i] != flash_data[i])
0001e0  48a6              LDR      r0,|L5.1148|
0001e2  5d00              LDRB     r0,[r0,r4]
0001e4  49a6              LDR      r1,|L5.1152|
0001e6  5d09              LDRB     r1,[r1,r4]
0001e8  4288              CMP      r0,r1
0001ea  d002              BEQ      |L5.498|
;;;183    			  check_fail = 1;
0001ec  2001              MOVS     r0,#1
0001ee  49a2              LDR      r1,|L5.1144|
0001f0  7008              STRB     r0,[r1,#0]
                  |L5.498|
0001f2  1c64              ADDS     r4,r4,#1              ;180
                  |L5.500|
0001f4  4894              LDR      r0,|L5.1096|
0001f6  6800              LDR      r0,[r0,#0]            ;180  ; can_receive_data
0001f8  4284              CMP      r4,r0                 ;180
0001fa  d3f1              BCC      |L5.480|
;;;184    		  }
;;;185    				  test_message[0] = 0xAA;
0001fc  20aa              MOVS     r0,#0xaa
0001fe  4991              LDR      r1,|L5.1092|
000200  7008              STRB     r0,[r1,#0]
;;;186    				  test_message[1] = 0x055;			  
000202  2055              MOVS     r0,#0x55
000204  7048              STRB     r0,[r1,#1]
;;;187    		  //if(check_fail == 0)
;;;188    							CAN1_Send_Msg(0x113,test_message);
000206  f2401013          MOV      r0,#0x113
00020a  f7fffffe          BL       CAN1_Send_Msg
;;;189    		  check_over = 2;
00020e  2002              MOVS     r0,#2
000210  498e              LDR      r1,|L5.1100|
000212  7008              STRB     r0,[r1,#0]
;;;190    		  start_load_data = 0;
000214  2000              MOVS     r0,#0
000216  498a              LDR      r1,|L5.1088|
000218  7008              STRB     r0,[r1,#0]
;;;191    			can_receive_data = 0;
00021a  498b              LDR      r1,|L5.1096|
00021c  6008              STR      r0,[r1,#0]  ; can_receive_data
00021e  e029              B        |L5.628|
                  |L5.544|
;;;192    		}
;;;193    		else if((can_receive_data == 0x35000) && (check_over == 2))
000220  4889              LDR      r0,|L5.1096|
000222  6800              LDR      r0,[r0,#0]  ; can_receive_data
000224  f5b03f54          CMP      r0,#0x35000
000228  d124              BNE      |L5.628|
00022a  4888              LDR      r0,|L5.1100|
00022c  7800              LDRB     r0,[r0,#0]  ; check_over
00022e  2802              CMP      r0,#2
000230  d120              BNE      |L5.628|
;;;194    			{
;;;195    		  for(i = 0;i < can_receive_data;i++)
000232  2400              MOVS     r4,#0
000234  e009              B        |L5.586|
                  |L5.566|
;;;196    		  {
;;;197    			if(VcRAM_Rom[i] != flash_rom[i])
000236  4893              LDR      r0,|L5.1156|
000238  5d00              LDRB     r0,[r0,r4]
00023a  4993              LDR      r1,|L5.1160|
00023c  5d09              LDRB     r1,[r1,r4]
00023e  4288              CMP      r0,r1
000240  d002              BEQ      |L5.584|
;;;198    			  check_fail = 1;
000242  2001              MOVS     r0,#1
000244  498c              LDR      r1,|L5.1144|
000246  7008              STRB     r0,[r1,#0]
                  |L5.584|
000248  1c64              ADDS     r4,r4,#1              ;195
                  |L5.586|
00024a  487f              LDR      r0,|L5.1096|
00024c  6800              LDR      r0,[r0,#0]            ;195  ; can_receive_data
00024e  4284              CMP      r4,r0                 ;195
000250  d3f1              BCC      |L5.566|
;;;199    		  }
;;;200    				  test_message[0] = 0x01;
000252  2001              MOVS     r0,#1
000254  497b              LDR      r1,|L5.1092|
000256  7008              STRB     r0,[r1,#0]
;;;201    				  test_message[1] = 0x02;		  
000258  2002              MOVS     r0,#2
00025a  7048              STRB     r0,[r1,#1]
;;;202    		  //if(check_fail == 0)
;;;203    							CAN1_Send_Msg(0x114,test_message);
00025c  f44f708a          MOV      r0,#0x114
000260  f7fffffe          BL       CAN1_Send_Msg
;;;204    		  check_over = 2;
000264  2002              MOVS     r0,#2
000266  4979              LDR      r1,|L5.1100|
000268  7008              STRB     r0,[r1,#0]
;;;205    		  start_load_data = 0;
00026a  2000              MOVS     r0,#0
00026c  4974              LDR      r1,|L5.1088|
00026e  7008              STRB     r0,[r1,#0]
;;;206    			can_receive_data = 0;
000270  4975              LDR      r1,|L5.1096|
000272  6008              STR      r0,[r1,#0]  ; can_receive_data
                  |L5.628|
;;;207    		}		  
;;;208    	   if((Flash_CAL != 0) && (CAN_need_update_data[0] == 3) && (CAN_need_update_data[1] == 3)
000274  4876              LDR      r0,|L5.1104|
000276  7800              LDRB     r0,[r0,#0]  ; Flash_CAL
000278  2800              CMP      r0,#0
00027a  d065              BEQ      |L5.840|
00027c  486f              LDR      r0,|L5.1084|
00027e  7800              LDRB     r0,[r0,#0]  ; CAN_need_update_data
000280  2803              CMP      r0,#3
                  |L5.642|
000282  d161              BNE      |L5.840|
000284  486d              LDR      r0,|L5.1084|
000286  7840              LDRB     r0,[r0,#1]  ; CAN_need_update_data
000288  2803              CMP      r0,#3
00028a  d1fa              BNE      |L5.642|
;;;209    			&& (CAN_need_update_data[2] == 3) && (CAN_need_update_data[3] == 3)
00028c  486b              LDR      r0,|L5.1084|
00028e  7880              LDRB     r0,[r0,#2]  ; CAN_need_update_data
000290  2803              CMP      r0,#3
000292  d1f6              BNE      |L5.642|
000294  4869              LDR      r0,|L5.1084|
000296  78c0              LDRB     r0,[r0,#3]  ; CAN_need_update_data
000298  2803              CMP      r0,#3
00029a  d1f2              BNE      |L5.642|
;;;210    			&& (CAN_need_update_data[4] == 3) && (CAN_need_update_data[5] == 3)
00029c  4867              LDR      r0,|L5.1084|
00029e  7900              LDRB     r0,[r0,#4]  ; CAN_need_update_data
0002a0  2803              CMP      r0,#3
0002a2  d1ee              BNE      |L5.642|
0002a4  4865              LDR      r0,|L5.1084|
0002a6  7940              LDRB     r0,[r0,#5]  ; CAN_need_update_data
0002a8  2803              CMP      r0,#3
0002aa  d1ea              BNE      |L5.642|
;;;211    			&& (CAN_need_update_data[6] == 3) && (CAN_need_update_data[7] == 3))
0002ac  4863              LDR      r0,|L5.1084|
0002ae  7980              LDRB     r0,[r0,#6]  ; CAN_need_update_data
0002b0  2803              CMP      r0,#3
0002b2  d1e6              BNE      |L5.642|
0002b4  4861              LDR      r0,|L5.1084|
0002b6  79c0              LDRB     r0,[r0,#7]  ; CAN_need_update_data
0002b8  2803              CMP      r0,#3
0002ba  d1e2              BNE      |L5.642|
;;;212    	   {
;;;213    			 /*
;;;214    	   while(flash_block < 1696)
;;;215    	   {
;;;216      
;;;217    		 flash_block = flash_block + 1;
;;;218    		 temp_address[0] = (data_address & 0xFF0000) / 0x10000;
;;;219    		 temp_address[1] = (data_address & 0xFF00 )/ 0x100;
;;;220    		 temp_address[2] = (data_address & 0xFF);	  
;;;221    		 check_sum = temp_address[0] + temp_address[1] + temp_address[2] + 0x3C;   
;;;222    		 //send_message_SCI_long(Loop_message, sizeof(Loop_message)/sizeof(Loop_message[0]));
;;;223    		 //send_message_SCI_long(temp_address, sizeof(temp_address)/sizeof(temp_address[0]));  
;;;224    		 //send_message_SCI1_long(data_list, (data_address & 0x0FFFFF), 0x80);
;;;225    		 //Usart_Send(check_sum);
;;;226    		  for( i = ((data_address- 0xC0B000) & 0x0FFFFF); i < (((data_address - 0xC0B000 ) & 0x0FFFFF)+0x80);i++)
;;;227    		  {
;;;228    			output_arry[count_flash_data] = flash_rom[i];
;;;229    			if(count_flash_data != 29999)
;;;230    			  count_flash_data = count_flash_data + 1;
;;;231    			else
;;;232    			  count_flash_data = 0;
;;;233    		  }   
;;;234    		 data_address = data_address + 0x80;
;;;235    		 Vbmessage_send = 1;
;;;236    	   }
;;;237    #endif
;;;238    */
;;;239    		if(( count != 70) && ( initial_complete == 0))
0002bc  4865              LDR      r0,|L5.1108|
0002be  8800              LDRH     r0,[r0,#0]  ; count
0002c0  2846              CMP      r0,#0x46
0002c2  d025              BEQ      |L5.784|
0002c4  4864              LDR      r0,|L5.1112|
0002c6  7800              LDRB     r0,[r0,#0]  ; initial_complete
0002c8  bb10              CBNZ     r0,|L5.784|
;;;240    		{
;;;241    			count++;
0002ca  4862              LDR      r0,|L5.1108|
0002cc  8800              LDRH     r0,[r0,#0]  ; count
0002ce  1c40              ADDS     r0,r0,#1
0002d0  4960              LDR      r1,|L5.1108|
0002d2  8008              STRH     r0,[r1,#0]
;;;242    
;;;243    			if((count == 20) && ( initial_complete == 0))
0002d4  4608              MOV      r0,r1
0002d6  8800              LDRH     r0,[r0,#0]  ; count
0002d8  2814              CMP      r0,#0x14
0002da  d108              BNE      |L5.750|
0002dc  485e              LDR      r0,|L5.1112|
0002de  7800              LDRB     r0,[r0,#0]  ; initial_complete
0002e0  b928              CBNZ     r0,|L5.750|
;;;244    			{
;;;245    
;;;246    				GPIO_WriteBit(GPIOA,GPIO_Pin_9,Bit_RESET);
0002e2  2200              MOVS     r2,#0
0002e4  f44f7100          MOV      r1,#0x200
0002e8  4852              LDR      r0,|L5.1076|
0002ea  f7fffffe          BL       GPIO_WriteBit
                  |L5.750|
;;;247    			}
;;;248    			if((count == 45)&& (initial_complete == 0))
0002ee  4859              LDR      r0,|L5.1108|
0002f0  8800              LDRH     r0,[r0,#0]  ; count
0002f2  282d              CMP      r0,#0x2d
0002f4  d10c              BNE      |L5.784|
0002f6  4858              LDR      r0,|L5.1112|
0002f8  7800              LDRB     r0,[r0,#0]  ; initial_complete
0002fa  b948              CBNZ     r0,|L5.784|
;;;249    			{
;;;250    		
;;;251    				GPIO_WriteBit(GPIOA,GPIO_Pin_9,Bit_SET);
0002fc  2201              MOVS     r2,#1
0002fe  0251              LSLS     r1,r2,#9
000300  484c              LDR      r0,|L5.1076|
000302  f7fffffe          BL       GPIO_WriteBit
;;;252    						uart_init(72,10400);
000306  f64201a0          MOV      r1,#0x28a0
00030a  2048              MOVS     r0,#0x48
00030c  f7fffffe          BL       uart_init
                  |L5.784|
;;;253    			} 
;;;254    		}
;;;255    		if(( initial_complete != 0))
000310  4851              LDR      r0,|L5.1112|
000312  7800              LDRB     r0,[r0,#0]  ; initial_complete
000314  b150              CBZ      r0,|L5.812|
;;;256    		{
;;;257    			if (count != 0xFFFF)
000316  484f              LDR      r0,|L5.1108|
000318  8800              LDRH     r0,[r0,#0]  ; count
00031a  f64f71ff          MOV      r1,#0xffff
00031e  4288              CMP      r0,r1
000320  d004              BEQ      |L5.812|
;;;258    				count++;
000322  484c              LDR      r0,|L5.1108|
000324  8800              LDRH     r0,[r0,#0]  ; count
000326  1c40              ADDS     r0,r0,#1
000328  494a              LDR      r1,|L5.1108|
00032a  8008              STRH     r0,[r1,#0]
                  |L5.812|
;;;259    		}
;;;260      
;;;261    
;;;262    		if((initial_complete == 0)&&(Vbmessage_send == 0)&&(count >= 70))
00032c  484a              LDR      r0,|L5.1112|
00032e  7800              LDRB     r0,[r0,#0]  ; initial_complete
000330  b958              CBNZ     r0,|L5.842|
000332  484a              LDR      r0,|L5.1116|
000334  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000336  b940              CBNZ     r0,|L5.842|
000338  4846              LDR      r0,|L5.1108|
00033a  8800              LDRH     r0,[r0,#0]  ; count
00033c  2846              CMP      r0,#0x46
00033e  db04              BLT      |L5.842|
;;;263    		{
;;;264    			send_message_SCI(start_message, sizeof(start_message)/sizeof(start_message[0]));
000340  2105              MOVS     r1,#5
000342  4852              LDR      r0,|L5.1164|
000344  f7fffffe          BL       send_message_SCI
                  |L5.840|
000348  e203              B        |L5.1874|
                  |L5.842|
;;;265    
;;;266    		}
;;;267    		else if((initial_complete == 1)&&(Vbmessage_send == 0)&&(count >= 1))
00034a  4843              LDR      r0,|L5.1112|
00034c  7800              LDRB     r0,[r0,#0]  ; initial_complete
00034e  2801              CMP      r0,#1
000350  d10b              BNE      |L5.874|
000352  4842              LDR      r0,|L5.1116|
000354  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000356  b940              CBNZ     r0,|L5.874|
000358  483e              LDR      r0,|L5.1108|
00035a  8800              LDRH     r0,[r0,#0]  ; count
00035c  2801              CMP      r0,#1
00035e  db04              BLT      |L5.874|
;;;268    		{
;;;269    			send_message_SCI(seed_message, sizeof(seed_message)/sizeof(seed_message[0]));
000360  2107              MOVS     r1,#7
000362  484b              LDR      r0,|L5.1168|
000364  f7fffffe          BL       send_message_SCI
000368  e1f3              B        |L5.1874|
                  |L5.874|
;;;270    		}
;;;271    		else if((initial_complete == 2)&&(Vbmessage_send == 0)&&(count >= 1))
00036a  483b              LDR      r0,|L5.1112|
00036c  7800              LDRB     r0,[r0,#0]  ; initial_complete
00036e  2802              CMP      r0,#2
000370  d10b              BNE      |L5.906|
000372  483a              LDR      r0,|L5.1116|
000374  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000376  b940              CBNZ     r0,|L5.906|
000378  4836              LDR      r0,|L5.1108|
00037a  8800              LDRH     r0,[r0,#0]  ; count
00037c  2801              CMP      r0,#1
00037e  db04              BLT      |L5.906|
;;;272    		{
;;;273    			send_message_SCI(security_message, sizeof(security_message)/sizeof(security_message[0]));	   
000380  2109              MOVS     r1,#9
000382  4844              LDR      r0,|L5.1172|
000384  f7fffffe          BL       send_message_SCI
000388  e1e3              B        |L5.1874|
                  |L5.906|
;;;274    		}
;;;275    		else if((initial_complete == 3)&&(Vbmessage_send == 0)&&(count >= 1))
00038a  4833              LDR      r0,|L5.1112|
00038c  7800              LDRB     r0,[r0,#0]  ; initial_complete
00038e  2803              CMP      r0,#3
000390  d10b              BNE      |L5.938|
000392  4832              LDR      r0,|L5.1116|
000394  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000396  b940              CBNZ     r0,|L5.938|
000398  482e              LDR      r0,|L5.1108|
00039a  8800              LDRH     r0,[r0,#0]  ; count
00039c  2801              CMP      r0,#1
00039e  db04              BLT      |L5.938|
;;;276    		{
;;;277    			send_message_SCI(ready_to_flash, sizeof(ready_to_flash)/sizeof(ready_to_flash[0])); 	 
0003a0  2107              MOVS     r1,#7
0003a2  483d              LDR      r0,|L5.1176|
0003a4  f7fffffe          BL       send_message_SCI
0003a8  e1d3              B        |L5.1874|
                  |L5.938|
;;;278    		}
;;;279    		else if((initial_complete == 4)&&(Vbmessage_send == 0)&&(count >= 1000))
0003aa  482b              LDR      r0,|L5.1112|
0003ac  7800              LDRB     r0,[r0,#0]  ; initial_complete
0003ae  2804              CMP      r0,#4
0003b0  d10c              BNE      |L5.972|
0003b2  482a              LDR      r0,|L5.1116|
0003b4  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
0003b6  b948              CBNZ     r0,|L5.972|
0003b8  4826              LDR      r0,|L5.1108|
0003ba  8800              LDRH     r0,[r0,#0]  ; count
0003bc  f5b07f7a          CMP      r0,#0x3e8
0003c0  db04              BLT      |L5.972|
;;;280    		{
;;;281      
;;;282    			send_message_SCI(ready_to_flash2, sizeof(ready_to_flash2)/sizeof(ready_to_flash2[0]));	   
0003c2  210d              MOVS     r1,#0xd
0003c4  4835              LDR      r0,|L5.1180|
0003c6  f7fffffe          BL       send_message_SCI
0003ca  e1c2              B        |L5.1874|
                  |L5.972|
;;;283    
;;;284    		}
;;;285    		else if((initial_complete == 5)&&(Vbmessage_send == 0)&&(count >= 1))
0003cc  4822              LDR      r0,|L5.1112|
0003ce  7800              LDRB     r0,[r0,#0]  ; initial_complete
0003d0  2805              CMP      r0,#5
0003d2  d126              BNE      |L5.1058|
0003d4  4821              LDR      r0,|L5.1116|
0003d6  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
0003d8  bb18              CBNZ     r0,|L5.1058|
0003da  481e              LDR      r0,|L5.1108|
0003dc  8800              LDRH     r0,[r0,#0]  ; count
0003de  2801              CMP      r0,#1
0003e0  db1f              BLT      |L5.1058|
;;;286    		{
;;;287    			check_sum = 0;
0003e2  2000              MOVS     r0,#0
0003e4  492e              LDR      r1,|L5.1184|
0003e6  7008              STRB     r0,[r1,#0]
;;;288    			if(flash_block <= 15)
0003e8  481d              LDR      r0,|L5.1120|
0003ea  8800              LDRH     r0,[r0,#0]  ; flash_block
0003ec  280f              CMP      r0,#0xf
0003ee  dc7d              BGT      |L5.1260|
;;;289    			{
;;;290    		
;;;291    				flash_block = flash_block + 1;
0003f0  481b              LDR      r0,|L5.1120|
0003f2  8800              LDRH     r0,[r0,#0]  ; flash_block
0003f4  1c40              ADDS     r0,r0,#1
0003f6  491a              LDR      r1,|L5.1120|
0003f8  8008              STRH     r0,[r1,#0]
;;;292    				temp_address[0] = (data_address & 0xFF0000) / 0x10000;
0003fa  481b              LDR      r0,|L5.1128|
0003fc  6800              LDR      r0,[r0,#0]  ; data_address
0003fe  0c00              LSRS     r0,r0,#16
000400  f88d0000          STRB     r0,[sp,#0]
;;;293    				temp_address[1] = (data_address & 0xFF00 )/ 0x100;
000404  4818              LDR      r0,|L5.1128|
000406  8800              LDRH     r0,[r0,#0]  ; data_address
000408  0a00              LSRS     r0,r0,#8
00040a  f88d0001          STRB     r0,[sp,#1]
;;;294    				temp_address[2] = (data_address & 0xFF);	   
00040e  4816              LDR      r0,|L5.1128|
000410  7800              LDRB     r0,[r0,#0]  ; data_address
000412  f88d0002          STRB     r0,[sp,#2]
;;;295    				check_sum = temp_address[0] + temp_address[1] + temp_address[2] + 0x3C;	
000416  f89d0000          LDRB     r0,[sp,#0]
00041a  f89d1001          LDRB     r1,[sp,#1]
00041e  4408              ADD      r0,r0,r1
000420  e040              B        |L5.1188|
                  |L5.1058|
000422  e06d              B        |L5.1280|
                  |L5.1060|
                          DCD      Roll_CAN_node
                  |L5.1064|
                          DCD      text_count
                  |L5.1068|
                          DCD      text_count_pre
                  |L5.1072|
                          DCD      backup_type
                  |L5.1076|
                          DCD      0x40020000
                  |L5.1080|
                          DCD      loop_enable
                  |L5.1084|
                          DCD      CAN_need_update_data
                  |L5.1088|
                          DCD      start_load_data
                  |L5.1092|
                          DCD      test_message
                  |L5.1096|
                          DCD      can_receive_data
                  |L5.1100|
                          DCD      check_over
                  |L5.1104|
                          DCD      Flash_CAL
                  |L5.1108|
                          DCD      count
                  |L5.1112|
                          DCD      initial_complete
                  |L5.1116|
                          DCD      Vbmessage_send
                  |L5.1120|
                          DCD      flash_block
                  |L5.1124|
                          DCD      0x00c0b000
                  |L5.1128|
                          DCD      data_address
                  |L5.1132|
                          DCD      cal_is_over
                  |L5.1136|
                          DCD      VcRAM_Utilty
                  |L5.1140|
                          DCD      data_list
                  |L5.1144|
                          DCD      check_fail
                  |L5.1148|
                          DCD      VcRAM_Cal
                  |L5.1152|
                          DCD      flash_data
                  |L5.1156|
                          DCD      VcRAM_Rom
                  |L5.1160|
                          DCD      flash_rom
                  |L5.1164|
                          DCD      start_message
                  |L5.1168|
                          DCD      seed_message
                  |L5.1172|
                          DCD      security_message
                  |L5.1176|
                          DCD      ready_to_flash
                  |L5.1180|
                          DCD      ready_to_flash2
                  |L5.1184|
                          DCD      check_sum
                  |L5.1188|
0004a4  f89d1002          LDRB     r1,[sp,#2]
0004a8  4408              ADD      r0,r0,r1
0004aa  303c              ADDS     r0,r0,#0x3c
0004ac  49a9              LDR      r1,|L5.1876|
0004ae  7008              STRB     r0,[r1,#0]
;;;296    				send_message_SCI_long(Loop_message, sizeof(Loop_message)/sizeof(Loop_message[0]));
0004b0  2105              MOVS     r1,#5
0004b2  48a9              LDR      r0,|L5.1880|
0004b4  f7fffffe          BL       send_message_SCI_long
;;;297    				send_message_SCI_long(temp_address, sizeof(temp_address)/sizeof(temp_address[0]));  
0004b8  2103              MOVS     r1,#3
0004ba  4668              MOV      r0,sp
0004bc  f7fffffe          BL       send_message_SCI_long
;;;298    				send_message_SCI1_long(VcRAM_Utilty, (data_address & 0x0FFFFF), 0x80);
0004c0  48a6              LDR      r0,|L5.1884|
0004c2  6800              LDR      r0,[r0,#0]  ; data_address
0004c4  f3c00113          UBFX     r1,r0,#0,#20
0004c8  2280              MOVS     r2,#0x80
0004ca  48a5              LDR      r0,|L5.1888|
0004cc  f7fffffe          BL       send_message_SCI1_long
;;;299    				Usart_Send(check_sum);
0004d0  48a0              LDR      r0,|L5.1876|
0004d2  7800              LDRB     r0,[r0,#0]  ; check_sum
0004d4  f7fffffe          BL       Usart_Send
;;;300    				data_address = data_address + 0x80;
0004d8  48a0              LDR      r0,|L5.1884|
0004da  6800              LDR      r0,[r0,#0]  ; data_address
0004dc  3080              ADDS     r0,r0,#0x80
0004de  499f              LDR      r1,|L5.1884|
0004e0  6008              STR      r0,[r1,#0]  ; data_address
;;;301    				Vbmessage_send = 1;
0004e2  2001              MOVS     r0,#1
0004e4  499f              LDR      r1,|L5.1892|
0004e6  7008              STRB     r0,[r1,#0]
0004e8  e133              B        |L5.1874|
0004ea  e7ff              B        |L5.1260|
                  |L5.1260|
;;;302    			}
;;;303    			else
;;;304    			{
;;;305    				flash_block = 0;
0004ec  2000              MOVS     r0,#0
0004ee  499e              LDR      r1,|L5.1896|
0004f0  8008              STRH     r0,[r1,#0]
;;;306    				data_address = 0xC05000;
0004f2  489e              LDR      r0,|L5.1900|
0004f4  4999              LDR      r1,|L5.1884|
0004f6  6008              STR      r0,[r1,#0]  ; data_address
;;;307    				initial_complete = 6;
0004f8  2006              MOVS     r0,#6
0004fa  499d              LDR      r1,|L5.1904|
0004fc  7008              STRB     r0,[r1,#0]
0004fe  e128              B        |L5.1874|
                  |L5.1280|
;;;308    			}
;;;309    		}
;;;310    		else if((initial_complete == 6)&&(Vbmessage_send == 0)&&(count >= 1))
000500  489b              LDR      r0,|L5.1904|
000502  7800              LDRB     r0,[r0,#0]  ; initial_complete
000504  2806              CMP      r0,#6
000506  d10b              BNE      |L5.1312|
000508  4896              LDR      r0,|L5.1892|
00050a  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
00050c  b940              CBNZ     r0,|L5.1312|
00050e  4899              LDR      r0,|L5.1908|
000510  8800              LDRH     r0,[r0,#0]  ; count
000512  2801              CMP      r0,#1
000514  db04              BLT      |L5.1312|
;;;311    		{
;;;312    			send_message_SCI(test_present, sizeof(test_present)/sizeof(test_present[0]));
000516  2109              MOVS     r1,#9
000518  4897              LDR      r0,|L5.1912|
00051a  f7fffffe          BL       send_message_SCI
00051e  e118              B        |L5.1874|
                  |L5.1312|
;;;313    		}
;;;314    		else if((initial_complete == 7)&&(Vbmessage_send == 0)&&(count >= 10000))
000520  4893              LDR      r0,|L5.1904|
000522  7800              LDRB     r0,[r0,#0]  ; initial_complete
000524  2807              CMP      r0,#7
000526  d10d              BNE      |L5.1348|
000528  488e              LDR      r0,|L5.1892|
00052a  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
00052c  b950              CBNZ     r0,|L5.1348|
00052e  4891              LDR      r0,|L5.1908|
000530  8800              LDRH     r0,[r0,#0]  ; count
000532  f2427110          MOV      r1,#0x2710
000536  4288              CMP      r0,r1
000538  db04              BLT      |L5.1348|
;;;315    		{
;;;316    			send_message_SCI(access1, sizeof(access1)/sizeof(access1[0]));
00053a  2107              MOVS     r1,#7
00053c  488f              LDR      r0,|L5.1916|
00053e  f7fffffe          BL       send_message_SCI
000542  e106              B        |L5.1874|
                  |L5.1348|
;;;317    	
;;;318    		}
;;;319    		else if((initial_complete == 8)&&(Vbmessage_send == 0)&&(count >= 1))
000544  488a              LDR      r0,|L5.1904|
000546  7800              LDRB     r0,[r0,#0]  ; initial_complete
000548  2808              CMP      r0,#8
00054a  d10b              BNE      |L5.1380|
00054c  4885              LDR      r0,|L5.1892|
00054e  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000550  b940              CBNZ     r0,|L5.1380|
000552  4888              LDR      r0,|L5.1908|
000554  8800              LDRH     r0,[r0,#0]  ; count
000556  2801              CMP      r0,#1
000558  db04              BLT      |L5.1380|
;;;320    		{
;;;321    			send_message_SCI(access2, sizeof(access2)/sizeof(access2[0]));	  
00055a  210c              MOVS     r1,#0xc
00055c  4888              LDR      r0,|L5.1920|
00055e  f7fffffe          BL       send_message_SCI
000562  e0f6              B        |L5.1874|
                  |L5.1380|
;;;322    		}
;;;323    		else if((initial_complete == 9)&&(Vbmessage_send == 0)&&(count >= 1))
000564  4882              LDR      r0,|L5.1904|
000566  7800              LDRB     r0,[r0,#0]  ; initial_complete
000568  2809              CMP      r0,#9
00056a  d17d              BNE      |L5.1640|
00056c  487d              LDR      r0,|L5.1892|
00056e  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000570  2800              CMP      r0,#0
000572  d179              BNE      |L5.1640|
000574  487f              LDR      r0,|L5.1908|
000576  8800              LDRH     r0,[r0,#0]  ; count
000578  2801              CMP      r0,#1
00057a  db75              BLT      |L5.1640|
;;;324    		{
;;;325    			check_sum = 0;
00057c  2000              MOVS     r0,#0
00057e  4975              LDR      r1,|L5.1876|
000580  7008              STRB     r0,[r1,#0]
;;;326    			if(cal_is_over == 0)
000582  4880              LDR      r0,|L5.1924|
000584  7800              LDRB     r0,[r0,#0]  ; cal_is_over
000586  bbe8              CBNZ     r0,|L5.1540|
;;;327    			{
;;;328    				if((flash_block <= 191) )
000588  4877              LDR      r0,|L5.1896|
00058a  8800              LDRH     r0,[r0,#0]  ; flash_block
00058c  28bf              CMP      r0,#0xbf
00058e  dc3f              BGT      |L5.1552|
;;;329    				{
;;;330    		
;;;331    					flash_block = flash_block + 1;
000590  4875              LDR      r0,|L5.1896|
000592  8800              LDRH     r0,[r0,#0]  ; flash_block
000594  1c40              ADDS     r0,r0,#1
000596  4974              LDR      r1,|L5.1896|
000598  8008              STRH     r0,[r1,#0]
;;;332    					temp_address[0] = (data_address & 0xFF0000) / 0x10000;
00059a  4870              LDR      r0,|L5.1884|
00059c  6800              LDR      r0,[r0,#0]  ; data_address
00059e  0c00              LSRS     r0,r0,#16
0005a0  f88d0000          STRB     r0,[sp,#0]
;;;333    					temp_address[1] = (data_address & 0xFF00 )/ 0x100;
0005a4  486d              LDR      r0,|L5.1884|
0005a6  8800              LDRH     r0,[r0,#0]  ; data_address
0005a8  0a00              LSRS     r0,r0,#8
0005aa  f88d0001          STRB     r0,[sp,#1]
;;;334    					temp_address[2] = (data_address & 0xFF);	 
0005ae  486b              LDR      r0,|L5.1884|
0005b0  7800              LDRB     r0,[r0,#0]  ; data_address
0005b2  f88d0002          STRB     r0,[sp,#2]
;;;335    					check_sum = temp_address[0] + temp_address[1] + temp_address[2] + 0x3C;   
0005b6  f89d0000          LDRB     r0,[sp,#0]
0005ba  f89d1001          LDRB     r1,[sp,#1]
0005be  4408              ADD      r0,r0,r1
0005c0  f89d1002          LDRB     r1,[sp,#2]
0005c4  4408              ADD      r0,r0,r1
0005c6  303c              ADDS     r0,r0,#0x3c
0005c8  4962              LDR      r1,|L5.1876|
0005ca  7008              STRB     r0,[r1,#0]
;;;336    					send_message_SCI_long(Loop_message, sizeof(Loop_message)/sizeof(Loop_message[0]));
0005cc  2105              MOVS     r1,#5
0005ce  4862              LDR      r0,|L5.1880|
0005d0  f7fffffe          BL       send_message_SCI_long
;;;337    					send_message_SCI_long(temp_address, sizeof(temp_address)/sizeof(temp_address[0]));	
0005d4  2103              MOVS     r1,#3
0005d6  4668              MOV      r0,sp
0005d8  f7fffffe          BL       send_message_SCI_long
;;;338    					send_message_SCI1_long(VcRAM_Cal, ((data_address - 0xC05000 )& 0x0FFFFF), 0x80);
0005dc  485f              LDR      r0,|L5.1884|
0005de  6800              LDR      r0,[r0,#0]  ; data_address
0005e0  f44f42a0          MOV      r2,#0x5000
0005e4  1a80              SUBS     r0,r0,r2
0005e6  f3c00113          UBFX     r1,r0,#0,#20
0005ea  2280              MOVS     r2,#0x80
0005ec  4866              LDR      r0,|L5.1928|
0005ee  f7fffffe          BL       send_message_SCI1_long
;;;339    					Usart_Send(check_sum);
0005f2  4858              LDR      r0,|L5.1876|
0005f4  7800              LDRB     r0,[r0,#0]  ; check_sum
0005f6  f7fffffe          BL       Usart_Send
;;;340    					data_address = data_address + 0x80;
0005fa  4858              LDR      r0,|L5.1884|
0005fc  6800              LDR      r0,[r0,#0]  ; data_address
0005fe  3080              ADDS     r0,r0,#0x80
000600  4956              LDR      r1,|L5.1884|
000602  e000              B        |L5.1542|
                  |L5.1540|
000604  e00d              B        |L5.1570|
                  |L5.1542|
000606  6008              STR      r0,[r1,#0]  ; data_address
;;;341    					Vbmessage_send = 1;
000608  2001              MOVS     r0,#1
00060a  4956              LDR      r1,|L5.1892|
00060c  7008              STRB     r0,[r1,#0]
00060e  e008              B        |L5.1570|
                  |L5.1552|
;;;342    				}
;;;343    				else
;;;344    				{
;;;345    					flash_block = 0;
000610  2000              MOVS     r0,#0
000612  4955              LDR      r1,|L5.1896|
000614  8008              STRH     r0,[r1,#0]
;;;346    					data_address = 0xC0B000;
000616  485d              LDR      r0,|L5.1932|
000618  4950              LDR      r1,|L5.1884|
00061a  6008              STR      r0,[r1,#0]  ; data_address
;;;347    					cal_is_over = 1;
00061c  2001              MOVS     r0,#1
00061e  4959              LDR      r1,|L5.1924|
000620  7008              STRB     r0,[r1,#0]
                  |L5.1570|
;;;348    				}
;;;349    			}
;;;350    			if((cal_is_over == 1) && (Flash_CAL == 2))
000622  4858              LDR      r0,|L5.1924|
000624  7800              LDRB     r0,[r0,#0]  ; cal_is_over
000626  2801              CMP      r0,#1
000628  d152              BNE      |L5.1744|
00062a  4859              LDR      r0,|L5.1936|
00062c  7800              LDRB     r0,[r0,#0]  ; Flash_CAL
00062e  2802              CMP      r0,#2
000630  d14e              BNE      |L5.1744|
;;;351    			{
;;;352    				if(flash_block < 1696)
000632  484d              LDR      r0,|L5.1896|
000634  8800              LDRH     r0,[r0,#0]  ; flash_block
000636  f5b06fd4          CMP      r0,#0x6a0
00063a  da3f              BGE      |L5.1724|
;;;353    				{
;;;354    		
;;;355    					flash_block = flash_block + 1;
00063c  484a              LDR      r0,|L5.1896|
00063e  8800              LDRH     r0,[r0,#0]  ; flash_block
000640  1c40              ADDS     r0,r0,#1
000642  4949              LDR      r1,|L5.1896|
000644  8008              STRH     r0,[r1,#0]
;;;356    					temp_address[0] = (data_address & 0xFF0000) / 0x10000;
000646  4845              LDR      r0,|L5.1884|
000648  6800              LDR      r0,[r0,#0]  ; data_address
00064a  0c00              LSRS     r0,r0,#16
00064c  f88d0000          STRB     r0,[sp,#0]
;;;357    					temp_address[1] = (data_address & 0xFF00 )/ 0x100;
000650  4842              LDR      r0,|L5.1884|
000652  8800              LDRH     r0,[r0,#0]  ; data_address
000654  0a00              LSRS     r0,r0,#8
000656  f88d0001          STRB     r0,[sp,#1]
;;;358    					temp_address[2] = (data_address & 0xFF);	 
00065a  4840              LDR      r0,|L5.1884|
00065c  7800              LDRB     r0,[r0,#0]  ; data_address
00065e  f88d0002          STRB     r0,[sp,#2]
;;;359    					check_sum = temp_address[0] + temp_address[1] + temp_address[2] + 0x3C;   
000662  f89d0000          LDRB     r0,[sp,#0]
000666  e000              B        |L5.1642|
                  |L5.1640|
000668  e044              B        |L5.1780|
                  |L5.1642|
00066a  f89d1001          LDRB     r1,[sp,#1]
00066e  4408              ADD      r0,r0,r1
000670  f89d1002          LDRB     r1,[sp,#2]
000674  4408              ADD      r0,r0,r1
000676  303c              ADDS     r0,r0,#0x3c
000678  4936              LDR      r1,|L5.1876|
00067a  7008              STRB     r0,[r1,#0]
;;;360    					send_message_SCI_long(Loop_message, sizeof(Loop_message)/sizeof(Loop_message[0]));
00067c  2105              MOVS     r1,#5
00067e  4836              LDR      r0,|L5.1880|
000680  f7fffffe          BL       send_message_SCI_long
;;;361    					send_message_SCI_long(temp_address, sizeof(temp_address)/sizeof(temp_address[0]));	
000684  2103              MOVS     r1,#3
000686  4668              MOV      r0,sp
000688  f7fffffe          BL       send_message_SCI_long
;;;362    					send_message_SCI1_long(VcRAM_Rom, ((data_address - 0xC0B000 )& 0x0FFFFF), 0x80);
00068c  4833              LDR      r0,|L5.1884|
00068e  6800              LDR      r0,[r0,#0]  ; data_address
000690  f44f4230          MOV      r2,#0xb000
000694  1a80              SUBS     r0,r0,r2
000696  f3c00113          UBFX     r1,r0,#0,#20
00069a  2280              MOVS     r2,#0x80
00069c  483d              LDR      r0,|L5.1940|
00069e  f7fffffe          BL       send_message_SCI1_long
;;;363    					Usart_Send(check_sum);
0006a2  482c              LDR      r0,|L5.1876|
0006a4  7800              LDRB     r0,[r0,#0]  ; check_sum
0006a6  f7fffffe          BL       Usart_Send
;;;364    					data_address = data_address + 0x80;
0006aa  482c              LDR      r0,|L5.1884|
0006ac  6800              LDR      r0,[r0,#0]  ; data_address
0006ae  3080              ADDS     r0,r0,#0x80
0006b0  492a              LDR      r1,|L5.1884|
0006b2  6008              STR      r0,[r1,#0]  ; data_address
;;;365    					Vbmessage_send = 1;
0006b4  2001              MOVS     r0,#1
0006b6  492b              LDR      r1,|L5.1892|
0006b8  7008              STRB     r0,[r1,#0]
0006ba  e04a              B        |L5.1874|
                  |L5.1724|
;;;366    				}
;;;367    				else
;;;368    				{
;;;369    					flash_block = 0;
0006bc  2000              MOVS     r0,#0
0006be  492a              LDR      r1,|L5.1896|
0006c0  8008              STRH     r0,[r1,#0]
;;;370    					cal_is_over = 1;
0006c2  2001              MOVS     r0,#1
0006c4  492f              LDR      r1,|L5.1924|
0006c6  7008              STRB     r0,[r1,#0]
;;;371    					initial_complete = 10;
0006c8  200a              MOVS     r0,#0xa
0006ca  4929              LDR      r1,|L5.1904|
0006cc  7008              STRB     r0,[r1,#0]
0006ce  e040              B        |L5.1874|
                  |L5.1744|
;;;372    				}
;;;373    			}
;;;374    			else if((cal_is_over == 1)&& (Flash_CAL == 1))
0006d0  482c              LDR      r0,|L5.1924|
0006d2  7800              LDRB     r0,[r0,#0]  ; cal_is_over
0006d4  2801              CMP      r0,#1
0006d6  d13c              BNE      |L5.1874|
0006d8  482d              LDR      r0,|L5.1936|
0006da  7800              LDRB     r0,[r0,#0]  ; Flash_CAL
0006dc  2801              CMP      r0,#1
0006de  d138              BNE      |L5.1874|
;;;375    			{
;;;376    				  flash_block = 0;
0006e0  2000              MOVS     r0,#0
0006e2  4921              LDR      r1,|L5.1896|
0006e4  8008              STRH     r0,[r1,#0]
;;;377    					cal_is_over = 1;
0006e6  2001              MOVS     r0,#1
0006e8  4926              LDR      r1,|L5.1924|
0006ea  7008              STRB     r0,[r1,#0]
;;;378    					initial_complete = 10;
0006ec  200a              MOVS     r0,#0xa
0006ee  4920              LDR      r1,|L5.1904|
0006f0  7008              STRB     r0,[r1,#0]
0006f2  e02e              B        |L5.1874|
                  |L5.1780|
;;;379    			}
;;;380    		
;;;381    	  }
;;;382    		else if((initial_complete == 10)&&(Vbmessage_send == 0)&&(count >= 1))
0006f4  481e              LDR      r0,|L5.1904|
0006f6  7800              LDRB     r0,[r0,#0]  ; initial_complete
0006f8  280a              CMP      r0,#0xa
0006fa  d10b              BNE      |L5.1812|
0006fc  4819              LDR      r0,|L5.1892|
0006fe  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000700  b940              CBNZ     r0,|L5.1812|
000702  481c              LDR      r0,|L5.1908|
000704  8800              LDRH     r0,[r0,#0]  ; count
000706  2801              CMP      r0,#1
000708  db04              BLT      |L5.1812|
;;;383    		{
;;;384    		 send_message_SCI(end_message, sizeof(end_message)/sizeof(end_message[0]));    
00070a  2106              MOVS     r1,#6
00070c  4822              LDR      r0,|L5.1944|
00070e  f7fffffe          BL       send_message_SCI
000712  e01e              B        |L5.1874|
                  |L5.1812|
;;;385    		}
;;;386    		else if((initial_complete == 11)&&(Vbmessage_send == 0)&&(count >= 1))
000714  4816              LDR      r0,|L5.1904|
000716  7800              LDRB     r0,[r0,#0]  ; initial_complete
000718  280b              CMP      r0,#0xb
00071a  d10b              BNE      |L5.1844|
00071c  4811              LDR      r0,|L5.1892|
00071e  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000720  b940              CBNZ     r0,|L5.1844|
000722  4814              LDR      r0,|L5.1908|
000724  8800              LDRH     r0,[r0,#0]  ; count
000726  2801              CMP      r0,#1
000728  db04              BLT      |L5.1844|
;;;387    		{
;;;388    		 send_message_SCI(end_message1, sizeof(end_message1)/sizeof(end_message1[0]));	  
00072a  2107              MOVS     r1,#7
00072c  481b              LDR      r0,|L5.1948|
00072e  f7fffffe          BL       send_message_SCI
000732  e00e              B        |L5.1874|
                  |L5.1844|
;;;389    		}
;;;390    		else if((initial_complete == 12)&&(Vbmessage_send == 0)&&(count >= 1))
000734  480e              LDR      r0,|L5.1904|
000736  7800              LDRB     r0,[r0,#0]  ; initial_complete
000738  280c              CMP      r0,#0xc
00073a  d10a              BNE      |L5.1874|
00073c  4809              LDR      r0,|L5.1892|
00073e  7800              LDRB     r0,[r0,#0]  ; Vbmessage_send
000740  b938              CBNZ     r0,|L5.1874|
000742  480c              LDR      r0,|L5.1908|
000744  8800              LDRH     r0,[r0,#0]  ; count
000746  2801              CMP      r0,#1
000748  db03              BLT      |L5.1874|
;;;391    		{
;;;392    		 send_message_SCI(end_message2, sizeof(end_message2)/sizeof(end_message2[0]));	  
00074a  2107              MOVS     r1,#7
00074c  4814              LDR      r0,|L5.1952|
00074e  f7fffffe          BL       send_message_SCI
                  |L5.1874|
000752  e47a              B        |L5.74|
;;;393    		} 
;;;394    	   }
;;;395    		}
;;;396    	}
;;;397    }
;;;398    	  void send_message_SCI1_long(const u8* message , u32 start_address, u16 length_Size)
                          ENDP

                  |L5.1876|
                          DCD      check_sum
                  |L5.1880|
                          DCD      Loop_message
                  |L5.1884|
                          DCD      data_address
                  |L5.1888|
                          DCD      VcRAM_Utilty
                  |L5.1892|
                          DCD      Vbmessage_send
                  |L5.1896|
                          DCD      flash_block
                  |L5.1900|
                          DCD      0x00c05000
                  |L5.1904|
                          DCD      initial_complete
                  |L5.1908|
                          DCD      count
                  |L5.1912|
                          DCD      test_present
                  |L5.1916|
                          DCD      access1
                  |L5.1920|
                          DCD      access2
                  |L5.1924|
                          DCD      cal_is_over
                  |L5.1928|
                          DCD      VcRAM_Cal
                  |L5.1932|
                          DCD      0x00c0b000
                  |L5.1936|
                          DCD      Flash_CAL
                  |L5.1940|
                          DCD      VcRAM_Rom
                  |L5.1944|
                          DCD      end_message
                  |L5.1948|
                          DCD      end_message1
                  |L5.1952|
                          DCD      end_message2

                          AREA ||i.send_message_SCI||, CODE, READONLY, ALIGN=2

                  send_message_SCI PROC
;;;432    	  }
;;;433    	  void send_message_SCI(u8* message , u16 length_Size)
000000  b510              PUSH     {r4,lr}
;;;434    	  {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;435    		  int i;
;;;436    	  
;;;437    		for( i = 0; i < length_Size;i++)
000006  2200              MOVS     r2,#0
000008  e003              B        |L6.18|
                  |L6.10|
;;;438    		{
;;;439    			  
;;;440    		  Usart_Send(message[i]);
00000a  5c98              LDRB     r0,[r3,r2]
00000c  f7fffffe          BL       Usart_Send
000010  1c52              ADDS     r2,r2,#1              ;437
                  |L6.18|
000012  42a2              CMP      r2,r4                 ;437
000014  dbf9              BLT      |L6.10|
;;;441    		} 
;;;442    		Vbmessage_send = 1;
000016  2001              MOVS     r0,#1
000018  4901              LDR      r1,|L6.32|
00001a  7008              STRB     r0,[r1,#0]
;;;443    	  }
00001c  bd10              POP      {r4,pc}
;;;444    	  void Usart_Send(u8 ch)
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      Vbmessage_send

                          AREA ||i.send_message_SCI1||, CODE, READONLY, ALIGN=2

                  send_message_SCI1 PROC
;;;420    	  }
;;;421    	  void send_message_SCI1(const u8* message , u32 start_address, u16 length_Size)
000000  b570              PUSH     {r4-r6,lr}
;;;422    	  {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;423    		  u32 i;
;;;424    		u8 output;
;;;425    		for( i = start_address; i < length_Size;i++)
000008  462a              MOV      r2,r5
00000a  e009              B        |L7.32|
                  |L7.12|
;;;426    		{
;;;427    			  output = message[i];
00000c  5ca3              LDRB     r3,[r4,r2]
;;;428    		  Usart_Send(output);
00000e  4618              MOV      r0,r3
000010  f7fffffe          BL       Usart_Send
;;;429    		  check_sum += output;
000014  4805              LDR      r0,|L7.44|
000016  7800              LDRB     r0,[r0,#0]  ; check_sum
000018  4418              ADD      r0,r0,r3
00001a  4904              LDR      r1,|L7.44|
00001c  7008              STRB     r0,[r1,#0]
00001e  1c52              ADDS     r2,r2,#1              ;425
                  |L7.32|
000020  42b2              CMP      r2,r6                 ;425
000022  d3f3              BCC      |L7.12|
;;;430    		} 
;;;431    		Vbmessage_send = 1;
000024  2001              MOVS     r0,#1
000026  4902              LDR      r1,|L7.48|
000028  7008              STRB     r0,[r1,#0]
;;;432    	  }
00002a  bd70              POP      {r4-r6,pc}
;;;433    	  void send_message_SCI(u8* message , u16 length_Size)
                          ENDP

                  |L7.44|
                          DCD      check_sum
                  |L7.48|
                          DCD      Vbmessage_send

                          AREA ||i.send_message_SCI1_long||, CODE, READONLY, ALIGN=2

                  send_message_SCI1_long PROC
;;;397    }
;;;398    	  void send_message_SCI1_long(const u8* message , u32 start_address, u16 length_Size)
000000  b570              PUSH     {r4-r6,lr}
;;;399    	  {
000002  4605              MOV      r5,r0
000004  460b              MOV      r3,r1
000006  4616              MOV      r6,r2
;;;400    		  u32 i;
;;;401    		u8 output;
;;;402    		for( i = start_address; i < (start_address+length_Size);i++)
000008  461a              MOV      r2,r3
00000a  e009              B        |L8.32|
                  |L8.12|
;;;403    		{
;;;404    			  output = message[i];
00000c  5cac              LDRB     r4,[r5,r2]
;;;405    		  Usart_Send(output);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       Usart_Send
;;;406    		  check_sum += output;
000014  4804              LDR      r0,|L8.40|
000016  7800              LDRB     r0,[r0,#0]  ; check_sum
000018  4420              ADD      r0,r0,r4
00001a  4903              LDR      r1,|L8.40|
00001c  7008              STRB     r0,[r1,#0]
00001e  1c52              ADDS     r2,r2,#1              ;402
                  |L8.32|
000020  1998              ADDS     r0,r3,r6              ;402
000022  4290              CMP      r0,r2                 ;402
000024  d8f2              BHI      |L8.12|
;;;407    		} 
;;;408    	  
;;;409    	  }
000026  bd70              POP      {r4-r6,pc}
;;;410    	  void send_message_SCI_long(u8* message , u16 length_Size)
                          ENDP

                  |L8.40|
                          DCD      check_sum

                          AREA ||i.send_message_SCI_long||, CODE, READONLY, ALIGN=1

                  send_message_SCI_long PROC
;;;409    	  }
;;;410    	  void send_message_SCI_long(u8* message , u16 length_Size)
000000  b510              PUSH     {r4,lr}
;;;411    	  {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;412    		  int i;
;;;413    	  
;;;414    		for( i = 0; i < length_Size;i++)
000006  2200              MOVS     r2,#0
000008  e003              B        |L9.18|
                  |L9.10|
;;;415    		{
;;;416    			  
;;;417    		  Usart_Send(message[i]);
00000a  5c98              LDRB     r0,[r3,r2]
00000c  f7fffffe          BL       Usart_Send
000010  1c52              ADDS     r2,r2,#1              ;414
                  |L9.18|
000012  42a2              CMP      r2,r4                 ;414
000014  dbf9              BLT      |L9.10|
;;;418    		} 
;;;419    	  
;;;420    	  }
000016  bd10              POP      {r4,pc}
;;;421    	  void send_message_SCI1(const u8* message , u32 start_address, u16 length_Size)
                          ENDP


                          AREA ||.ARM.__AT_0x68000008||, DATA, NOINIT, ALIGN=0

                  VcRAM_Rom
                          %        217088

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VcRAM_Utilty
                          %        2048
                  VcRAM_Cal
                          %        24576
                  output_arry
                          %        30000

                          AREA ||.data||, DATA, ALIGN=2

                  TxMsg2
                          DCD      0x00000700
                          DCD      0x00000000
000008  000008ac          DCB      0x00,0x00,0x08,0xac
00000c  63503228          DCB      0x63,0x50,0x32,0x28
000010  00000000          DCB      0x00,0x00,0x00,0x00
                  TxMsg1
                          DCD      0x00000600
                          DCD      0x00000000
00001c  000008ac          DCB      0x00,0x00,0x08,0xac
000020  63503228          DCB      0x63,0x50,0x32,0x28
000024  00000000          DCB      0x00,0x00,0x00,0x00
                  delay_time
                          DCD      0x00000000
                  start_load_data
00002c  00000000          DCB      0x00,0x00,0x00,0x00
                  test_temp
                          DCD      0x00000000
                  check_sum
000034  00                DCB      0x00
                  test_char
000035  00                DCB      0x00
                  text_count
000036  0000              DCB      0x00,0x00
                  text_count_pre
000038  00000000          DCB      0x00,0x00,0x00,0x00
                  time_count_pre
                          DCD      0x00000000
                  time_count_diff
                          DCD      0x00000000
                  time_count_curr
                          DCD      0x00000000
                  get_count
                          DCD      0x00000000
                  backup_type
00004c  00                DCB      0x00
                  irror_happen
00004d  00                DCB      0x00
                  switch_pre
00004e  00                DCB      0x00
                  need_update_rtc
00004f  00                DCB      0x00
                  send_data_check
000050  00                DCB      0x00
                  run_reset
000051  00                DCB      0x00
                  Vbfirst_time
000052  00                DCB      0x00
                  Vbcan_pending
000053  00                DCB      0x00
                  rtc_update
000054  00                DCB      0x00
                  Roll_CAN_node
000055  00                DCB      0x00
                  start_message
000056  8111              DCB      0x81,0x11
000058  f18104            DCB      0xf1,0x81,0x04
                  seed_message
00005b  80                DCB      0x80
00005c  11f10227          DCB      0x11,0xf1,0x02,0x27
000060  01ac              DCB      0x01,0xac
                  security_message
000062  8011              DCB      0x80,0x11
000064  f1042702          DCB      0xf1,0x04,0x27,0x02
000068  8474a7            DCB      0x84,0x74,0xa7
                  ready_to_flash
00006b  80                DCB      0x80
00006c  11f10210          DCB      0x11,0xf1,0x02,0x10
000070  8519              DCB      0x85,0x19
                  ready_to_flash2
000072  8011              DCB      0x80,0x11
000074  f10834e0          DCB      0xf1,0x08,0x34,0xe0
000078  00000000          DCB      0x00,0x00,0x00,0x00
00007c  0800a6            DCB      0x08,0x00,0xa6
                  access1
00007f  80                DCB      0x80
000080  11f10283          DCB      0x11,0xf1,0x02,0x83
000084  0007              DCB      0x00,0x07
                  access2
000086  8011              DCB      0x80,0x11
000088  f1078303          DCB      0xf1,0x07,0x83,0x03
00008c  0000ff00          DCB      0x00,0x00,0xff,0x00
000090  ff0e              DCB      0xff,0x0e
                  test_present
000092  8011              DCB      0x80,0x11
000094  f10438e0          DCB      0xf1,0x04,0x38,0xe0
000098  00009e            DCB      0x00,0x00,0x9e
                  Loop_message
00009b  80                DCB      0x80
00009c  11f18436          DCB      0x11,0xf1,0x84,0x36
                  end_message
0000a0  8011f101          DCB      0x80,0x11,0xf1,0x01
0000a4  37ba              DCB      0x37,0xba
                  end_message1
0000a6  8011              DCB      0x80,0x11
0000a8  f1023101          DCB      0xf1,0x02,0x31,0x01
0000ac  b6                DCB      0xb6
                  end_message2
0000ad  8011f1            DCB      0x80,0x11,0xf1
0000b0  02110095          DCB      0x02,0x11,0x00,0x95
                  test_message
0000b4  01020304          DCB      0x01,0x02,0x03,0x04
0000b8  05060708          DCB      0x05,0x06,0x07,0x08
                  check_over
0000bc  00                DCB      0x00
                  cal_is_over
0000bd  000000            DCB      0x00,0x00,0x00
                  count_flash_data
                          DCD      0x00000000
                  br1
                          DCD      0x00000000
                  txid_byte
0000c8  0000              DCB      0x00,0x00
                  rxid_byte
0000ca  0000              DCB      0x00,0x00
                  Adress_support
0000cc  0000              DCB      0x00,0x00
                  flash_block
0000ce  0000              DCW      0x0000
                  initial_complete
0000d0  00000000          DCB      0x00,0x00,0x00,0x00
                  baudrate
                          DCD      0x00000000
                  temp1
                          DCD      0x00000000
                  check_fail
0000dc  00000000          DCB      0x00,0x00,0x00,0x00
                  file_result
                          DCD      0x00000000
                  data_address
                          DCD      0x00e00000
                  Vbmessage_send
0000e8  0000              DCB      0x00,0x00
                  count
0000ea  0000              DCB      0x00,0x00
                  sizeofvalue
0000ec  00                DCB      0x00
                  Add_ext_element
0000ed  00                DCB      0x00
                  count_space
0000ee  0000              DCB      0x00,0x00
                  address_value
                          DCD      0x00000000
                  Flash_CAL
0000f4  00                DCB      0x00
                  ||CTR||
0000f5  00                DCB      0x00
                  MTA_Number
0000f6  00                DCB      0x00
                  Add_ext
0000f7  00                DCB      0x00
                  DAQ_number
0000f8  00                DCB      0x00
                  object_ODT
0000f9  00                DCB      0x00
                  element_ODT
0000fa  00                DCB      0x00
                  last_ODT_number
0000fb  00                DCB      0x00
                  event_channel_no
0000fc  00000000          DCB      0x00,0x00,0x00,0x00
                  DTO_ID
                          DCD      0x00000000
                  pended_message
                          DCD      0x00000000
                  transmit_rate
000108  0000              DCB      0x00,0x00
                  test_cpnst
00010a  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "USER\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_TxMsg2____REV16|
#line 388 ".\\CMSIS\\cmsis_armcc.h"
|__asm___6_main_c_TxMsg2____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_TxMsg2____REVSH|
#line 402
|__asm___6_main_c_TxMsg2____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_TxMsg2____RRX|
#line 587
|__asm___6_main_c_TxMsg2____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
